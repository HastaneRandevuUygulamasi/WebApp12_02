// <auto-generated />
using System;
using HastaneRandevuUygulaması.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HastaneRandevuUygulaması.Migrations
{
    [DbContext(typeof(HastaneRandevuUygulamasıContext))]
    [Migration("20231231091859_hastane")]
    partial class hastane
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Doktor", b =>
                {
                    b.Property<int>("doktorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("doktorId"), 1L, 1);

                    b.Property<string>("doktorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("poliklinikId")
                        .HasColumnType("int");

                    b.HasKey("doktorId");

                    b.HasIndex("poliklinikId");

                    b.ToTable("Doktor");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Hasta", b =>
                {
                    b.Property<int>("hastaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hastaId"), 1L, 1);

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("dogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("hastaLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hastaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hastaId");

                    b.ToTable("Hasta");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Hastane", b =>
                {
                    b.Property<int>("hastaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hastaneId"), 1L, 1);

                    b.Property<string>("hastaneAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ilceId")
                        .HasColumnType("int");

                    b.HasKey("hastaneId");

                    b.HasIndex("ilceId");

                    b.ToTable("Hastane");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.il", b =>
                {
                    b.Property<int>("ilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ilId"), 1L, 1);

                    b.Property<string>("ilAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ilId");

                    b.ToTable("il");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.ilce", b =>
                {
                    b.Property<int>("ilceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ilceID"), 1L, 1);

                    b.Property<int>("ilID")
                        .HasColumnType("int");

                    b.Property<string>("ilceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ilceID");

                    b.HasIndex("ilID");

                    b.ToTable("ilce");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Poliklinik", b =>
                {
                    b.Property<int>("poliklinikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("poliklinikId"), 1L, 1);

                    b.Property<int>("hastaneId")
                        .HasColumnType("int");

                    b.Property<string>("poliklinikName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("poliklinikId");

                    b.HasIndex("hastaneId");

                    b.ToTable("Poliklinik");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Randevu", b =>
                {
                    b.Property<int>("randevuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("randevuId"), 1L, 1);

                    b.Property<int>("doktorId")
                        .HasColumnType("int");

                    b.Property<int>("hastaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("randevuTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("randevuId");

                    b.HasIndex("doktorId");

                    b.HasIndex("hastaId");

                    b.ToTable("Randevu");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Doktor", b =>
                {
                    b.HasOne("HastaneRandevuUygulaması.Models.Poliklinik", "poliklinik")
                        .WithMany("Doktorlar")
                        .HasForeignKey("poliklinikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("poliklinik");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Hastane", b =>
                {
                    b.HasOne("HastaneRandevuUygulaması.Models.ilce", "ilce")
                        .WithMany("Hastaneler")
                        .HasForeignKey("ilceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ilce");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.ilce", b =>
                {
                    b.HasOne("HastaneRandevuUygulaması.Models.il", "il")
                        .WithMany("ilceler")
                        .HasForeignKey("ilID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("il");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Poliklinik", b =>
                {
                    b.HasOne("HastaneRandevuUygulaması.Models.Hastane", "hastane")
                        .WithMany("Poliklinikler")
                        .HasForeignKey("hastaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hastane");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Randevu", b =>
                {
                    b.HasOne("HastaneRandevuUygulaması.Models.Doktor", "doktor")
                        .WithMany()
                        .HasForeignKey("doktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaneRandevuUygulaması.Models.Hasta", "hasta")
                        .WithMany("randevular")
                        .HasForeignKey("hastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doktor");

                    b.Navigation("hasta");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Hasta", b =>
                {
                    b.Navigation("randevular");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Hastane", b =>
                {
                    b.Navigation("Poliklinikler");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.il", b =>
                {
                    b.Navigation("ilceler");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.ilce", b =>
                {
                    b.Navigation("Hastaneler");
                });

            modelBuilder.Entity("HastaneRandevuUygulaması.Models.Poliklinik", b =>
                {
                    b.Navigation("Doktorlar");
                });
#pragma warning restore 612, 618
        }
    }
}
